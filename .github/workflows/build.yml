# Copyright 2025 Xenon Emulator Project

name: Build

on: [push, pull_request]

concurrency:
  group: ci-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'push' }}

env:
  BUILD_TYPE: Release
  BUILD_DIR: ${{ github.workspace }}/build

jobs:
  get-info:
    runs-on: ubuntu-24.04
    outputs:
      shorthash: ${{ steps.vars.outputs.shorthash }}
      commit: ${{ steps.vars.outputs.commit }}
    steps:
    - uses: actions/checkout@main
      with:
        fetch-depth: 0
    - name: Commit Count and Git Hash
      id: vars
      run: |
        echo "shorthash=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        echo "commit=$(git rev-list --count HEAD)" >> $GITHUB_ENV
        echo "shorthash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        echo "commit=$(git rev-list --count HEAD)" >> $GITHUB_OUTPUT

  Linux-Clang:
    name: Linux (Clang)
    runs-on: ubuntu-24.04
    needs: get-info
    steps:
    - uses: actions/checkout@main
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Install Dependencies
      run: |
        sudo apt update
        sudo apt install -y ninja-build clang lld cmake ccache \
                           libx11-dev libxext-dev libxrandr-dev libxcursor-dev \
                           libxi-dev libxinerama-dev libwayland-dev libxkbcommon-dev \
                           wayland-protocols git

    - name: Cache build and deps
      uses: actions/cache@main
      with:
        path: |
          build
          Deps
        key: ${{ runner.os }}-${{ env.BUILD_TYPE }}-clang-deps-${{ hashFiles('**/CMakeLists.txt', '**/*.cpp', '**/*.h') }}
        restore-keys: |
          ${{ runner.os }}-${{ env.BUILD_TYPE }}-clang-deps-

    - name: Cache CCache
      uses: actions/cache@main
      with:
        path: ~/.ccache
        key: ${{ runner.os }}-${{ env.BUILD_TYPE }}-clang-ccache-${{ hashFiles('**/*.cpp', '**/*.h') }}
        restore-keys: |
          ${{ runner.os }}-${{ env.BUILD_TYPE }}-clang-ccache-

    - name: Configure CMake (Clang)
      run: cmake -G Ninja -B ${{ env.BUILD_DIR }} -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
                 -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++
                 -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache

    - name: Build
      run: cmake --build ${{ env.BUILD_DIR }} --config ${{ env.BUILD_TYPE }} --parallel $(nproc)

    - name: Upload Linux Clang Artifact
      uses: actions/upload-artifact@main
      with:
        name: Xenon-linux64-clang-${{ env.BUILD_TYPE }}-${{ needs.get-info.outputs.commit }}-${{ needs.get-info.outputs.shorthash }}
        path: |
          ${{ env.BUILD_DIR }}/build/Xenon-${{ env.BUILD_TYPE }}
          ${{ env.BUILD_DIR }}/Deps/fonts/

  Linux-GCC:
    name: Linux (GCC)
    runs-on: ubuntu-24.04
    needs: get-info
    steps:
    - uses: actions/checkout@main
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Install Dependencies
      run: |
        sudo apt update
        sudo apt install -y ninja-build g++ cmake ccache \
                           libx11-dev libxext-dev libxrandr-dev libxcursor-dev \
                           libxi-dev libxinerama-dev libwayland-dev libxkbcommon-dev \
                           wayland-protocols git

    - name: Cache build and deps
      uses: actions/cache@main
      with:
        path: |
          build
          Deps
        key: ${{ runner.os }}-${{ env.BUILD_TYPE }}-gcc-deps-${{ hashFiles('**/CMakeLists.txt', '**/*.cpp', '**/*.h') }}
        restore-keys: |
          ${{ runner.os }}-${{ env.BUILD_TYPE }}-gcc-deps-

    - name: Cache CCache
      uses: actions/cache@main
      with:
        path: ~/.ccache
        key: ${{ runner.os }}-${{ env.BUILD_TYPE }}-gcc-ccache-${{ hashFiles('**/*.cpp', '**/*.h') }}
        restore-keys: |
          ${{ runner.os }}-${{ env.BUILD_TYPE }}-gcc-ccache-

    - name: Configure CMake (GCC)
      run: cmake -G Ninja -B ${{ env.BUILD_DIR }} -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
                 -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++
                 -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache

    - name: Build
      run: cmake --build ${{ env.BUILD_DIR }} --config ${{ env.BUILD_TYPE }} --parallel $(nproc)

    - name: Upload Linux GCC Artifact
      uses: actions/upload-artifact@main
      with:
        name: Xenon-linux64-gcc-${{ env.BUILD_TYPE }}-${{ needs.get-info.outputs.commit }}-${{ needs.get-info.outputs.shorthash }}
        path: |
          ${{ env.BUILD_DIR }}/build/Xenon-${{ env.BUILD_TYPE }}
          ${{ env.BUILD_DIR }}/Deps/fonts/


  Windows-Clang:
    name: Windows (Clang)
    runs-on: windows-2025
    needs: get-info
    steps:
    - uses: actions/checkout@main
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Cache build and deps
      uses: actions/cache@main
      with:
        path: |
          build
          Deps
        key: ${{ runner.os }}-${{ env.BUILD_TYPE }}-clang-deps-${{ hashFiles('**/CMakeLists.txt', '**/*.cpp', '**/*.h') }}
        restore-keys: |
          ${{ runner.os }}-${{ env.BUILD_TYPE }}-clang-deps-

    - name: Cache CCache
      uses: actions/cache@main
      with:
        path: ~/.ccache
        key: ${{ runner.os }}-${{ env.BUILD_TYPE }}-clang-ccache-${{ hashFiles('**/*.cpp', '**/*.h') }}
        restore-keys: |
          ${{ runner.os }}-${{ env.BUILD_TYPE }}-clang-ccache-

    - name: Configure CMake (Clang)
      run: cmake -G Ninja -B "${{ env.BUILD_DIR }}" -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
                 -DCMAKE_C_COMPILER=clang-cl -DCMAKE_CXX_COMPILER=clang-cl
                 -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache

    - name: Build
      run: cmake --build "${{ env.BUILD_DIR }}" --config ${{ env.BUILD_TYPE }} --parallel $env:NUMBER_OF_PROCESSORS

    - name: Upload Windows Clang Artifact
      uses: actions/upload-artifact@main
      with:
        name: Xenon-win64-clang-${{ env.BUILD_TYPE }}-${{ needs.get-info.outputs.commit }}-${{ needs.get-info.outputs.shorthash }}
        path: |
          ${{ env.BUILD_DIR }}\Xenon-${{ env.BUILD_TYPE }}.exe
          ${{ env.BUILD_DIR }}/Deps/fonts/

  Windows-GCC:
    name: Windows (GCC via MSYS2)
    runs-on: windows-2025
    needs: get-info
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: actions/checkout@main
      with:
        submodules: recursive
        fetch-depth: 0

    - uses: msys2/setup-msys2@v2
      with:
        msystem: UCRT64
        update: true
        install: >
          git
          mingw-w64-ucrt-x86_64-gcc
          mingw-w64-ucrt-x86_64-cmake
          mingw-w64-ucrt-x86_64-ninja
          mingw-w64-ucrt-x86_64-ccache
          make

    - name: Cache build and deps
      uses: actions/cache@main
      with:
        path: |
          build
          Deps
        key: ${{ runner.os }}-${{ env.BUILD_TYPE }}-gcc-deps-${{ hashFiles('**/CMakeLists.txt', '**/*.cpp', '**/*.h') }}
        restore-keys: |
          ${{ runner.os }}-${{ env.BUILD_TYPE }}-gcc-deps-

    - name: Cache CCache
      uses: actions/cache@main
      with:
        path: ~/.ccache
        key: ${{ runner.os }}-${{ env.BUILD_TYPE }}-gcc-ccache-${{ hashFiles('**/*.cpp', '**/*.h') }}
        restore-keys: |
          ${{ runner.os }}-${{ env.BUILD_TYPE }}-gcc-ccache-

    - name: Configure CMake (GCC)
      run: cmake -G Ninja -B "${{ env.BUILD_DIR }}" -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
                 -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ \
                 -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache

    - name: Build
      run: cmake --build "${{ env.BUILD_DIR }}" --config ${{ env.BUILD_TYPE }} --parallel

    - name: Upload Windows-GCC Artifact
      uses: actions/upload-artifact@main
      with:
        name: Xenon-win64-gcc-${{ env.BUILD_TYPE }}-${{ needs.get-info.outputs.commit }}-${{ needs.get-info.outputs.shorthash }}
        path: |
          ${{ env.BUILD_DIR }}\Xenon-${{ env.BUILD_TYPE }}.exe
          ${{ env.BUILD_DIR }}/Deps/fonts/

  linux_nix:
    name: Linux (nix)
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@main
      - uses: cachix/install-nix-action@master
      - name: Build Xenon
        run: nix build .#xenon -L
