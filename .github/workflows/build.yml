# Copyright 2025 Xenon Emulator Project

name: Build

on: [push, pull_request]

concurrency:
  group: ci-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'push' }}

env:
  BUILD_TYPE: Release

jobs:
  get-info:
    runs-on: ubuntu-24.04
    outputs:
      shorthash: ${{ steps.vars.outputs.shorthash }}
      commit: ${{ steps.vars.outputs.commit }}
    steps:
    - uses: actions/checkout@main
      with:
        fetch-depth: 0
    - name: Commit Count and Git Hash
      id: vars
      run: |
        echo "shorthash=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        echo "commit=$(git rev-list --count HEAD)" >> $GITHUB_ENV
        echo "shorthash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        echo "commit=$(git rev-list --count HEAD)" >> $GITHUB_OUTPUT

  Windows:
    runs-on: windows-2025
    needs: get-info
    steps:
    - uses: actions/checkout@main
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Cache CMake Configuration
      uses: actions/cache@main
      env:
          cache-name: ${{ runner.os }}-xenon-cache-config
      with:
          path: |
            ${{github.workspace}}/build
          key: ${{ env.cache-name }}-${{ hashFiles('**/CMakeLists.txt', 'cmake/**') }}
          restore-keys: |
            ${{ env.cache-name }}-

    - name: Cache CMake Build
      uses: hendrikmuhs/ccache-action@v1.2.18
      env:
          cache-name: ${{ runner.os }}-xenon-cache-build
      with:
        append-timestamp: false
        key: ${{ env.cache-name }}-${{ hashFiles('**/CMakeLists.txt', 'cmake/**') }}

    - name: Configure CMake
      run: cmake -G Ninja -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_COMPILER_ID=Clang -DCMAKE_C_COMPILER=clang-cl -DCMAKE_CXX_COMPILER=clang-cl -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel $env:NUMBER_OF_PROCESSORS

    - name: Upload Windows Artifact
      uses: actions/upload-artifact@main
      with:
        name: Xenon-win64-${{ needs.get-info.outputs.commit }}-${{ needs.get-info.outputs.shorthash }}
        path: ${{github.workspace}}/build/Xenon.exe

  Linux:
    runs-on: ubuntu-24.04
    needs: get-info
    steps:
    - uses: actions/checkout@main
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Install Dependencies
      run: |
        sudo apt update
        sudo apt install -y ninja-build clang lld cmake ccache \
                           libx11-dev libxext-dev libxrandr-dev libxcursor-dev \
                           libxi-dev libxinerama-dev libwayland-dev libxkbcommon-dev \
                           wayland-protocols

    - name: Cache CMake Configuration
      uses: actions/cache@main
      env:
          cache-name: ${{ runner.os }}-xenon-cache-config
      with:
          path: |
            ${{github.workspace}}/build
          key: ${{ env.cache-name }}-${{ hashFiles('**/CMakeLists.txt', 'cmake/**') }}
          restore-keys: |
            ${{ env.cache-name }}-

    - name: Cache CMake Build
      uses: hendrikmuhs/ccache-action@v1.2.18
      env:
          cache-name: ${{ runner.os }}-xenon-cache-build
      with:
        append-timestamp: false
        key: ${{ env.cache-name }}-${{ hashFiles('**/CMakeLists.txt', 'cmake/**') }}

    - name: Configure CMake
      run: cmake -G Ninja -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_COMPILER_ID=Clang -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel $(nproc)

    - name: Upload Linux Artifact
      uses: actions/upload-artifact@main
      with:
        name: Xenon-linux64-${{ needs.get-info.outputs.commit }}-${{ needs.get-info.outputs.shorthash }}
        path: ${{github.workspace}}/build/Xenon

  linux_nix:
    name: Linux (nix)
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@main
      - uses: cachix/install-nix-action@master
      - name: Build Xenon
        run: nix build .#xenon -L

  macOS:
    name: macOS (ARM)
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@main
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup latest Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Install Dependencies (macOS)
        run: |
          brew install ninja

      - name: Cache CMake Configuration
        uses: actions/cache@main
        env:
          cache-name: ${{ runner.os }}-xenon-cache-config
        with:
          path: |
            ${{github.workspace}}/build
          key: ${{ env.cache-name }}-${{ hashFiles('**/CMakeLists.txt', 'cmake/**') }}
          restore-keys: |
            ${{ env.cache-name }}-

      - name: Cache CMake Build
        uses: hendrikmuhs/ccache-action@v1.2.18
        env:
          cache-name: ${{ runner.os }}-xenon-cache-build
        with:
          append-timestamp: false
          key: ${{ env.cache-name }}-${{ hashFiles('**/CMakeLists.txt', 'cmake/**') }}

      - name: Configure CMake
        run: cmake -G Ninja -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_COMPILER_ID=Clang -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel $(nproc)

      - name: Upload macOS Artifact
        uses: actions/upload-artifact@main
        with:
          name: Xenon-macos64-${{ needs.get-info.outputs.commit }}-${{ needs.get-info.outputs.shorthash }}
          path: ${{github.workspace}}/build/Xenon